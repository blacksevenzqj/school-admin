# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8082
  context-path: /school-admin

# mysql
spring:
  # DataSource Config
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/renren_security_nodept?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    # 下面为连接池的补充设置，应用到上面所有数据源中：初始化大小，最小，最大
    initialSize: 5
    maxActive: 100
    minIdle: 5
    # 配置获取连接等待超时的时间
    maxWait: 8000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 300
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #     useGlobalDataSourceStat: true

  # jackson时间格式化
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss

  http:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

  redis:
    database: 0
    host: localhost
    port: 6379
    password:      # 密码（默认为空）
    timeout: 6000  # 连接超时时长（毫秒）
    pool:
      max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 10      # 连接池中的最大空闲连接
      min-idle: 5       # 连接池中的最小空闲连接

  freemarker:
    suffix: .html
    request-context-attribute: request

  aop:
    proxy-target-class: true

# Mybatis配置
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*/*.xml

# reasonable分页参数合理化
pagehelper:
  reasonable: false

# 日志级别
logging:
  config: classpath:config/logback/logback-spring.xml

school:
  redis:
    open: false  # 是否开启redis缓存  true开启   false关闭
  shiro:
    redis: false # true表示shiro session存到redis里，需要开启redis，才会生效【分布式场景】

